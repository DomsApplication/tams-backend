name: doctl - SSH-Key generator

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run the workflow against'
        type: environment
        required: true
      ssh-key-name:
        description: "Provide DO ssh key name"
        required: true
        type: string
        default: "github-action-key"

permissions:
  contents: write

jobs:
  provision:
    name: Provision and Deployment
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'default' }}
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      packages: read

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Check ssh-key exists
        run: |
          SSH_KEY_ID=$(doctl compute ssh-key list --format ID,Name --no-header | grep ${{ inputs.ssh-key-name }} | awk '{print $1}')
          echo "SSH_KEY_ID=$SSH_KEY_ID" >> $GITHUB_ENV
          if [[ -n "$SSH_KEY_ID" ]]; then
            echo "✅ SSH-KEY is already exists: ${{ inputs.ssh-key-name }}"
            echo "SSH_KEY_EXISTS=true" >> $GITHUB_ENV
          else
            echo "❌ SSH-KEY is not exists: ${{ inputs.ssh-key-name }}"
            echo "SSH_KEY_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Generate and Set SSH Key
        if: env.SSH_KEY_EXISTS == 'false'
        run: |
          ssh-keygen -t rsa -b 4096 -f id_rsa -N ""
          PRIVATE_KEY=$(cat id_rsa)
          PUBLIC_KEY=$(cat id_rsa.pub)
          echo "PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          echo "$PRIVATE_KEY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "PUBLIC_KEY=$PUBLIC_KEY" >> $GITHUB_ENV
          doctl compute ssh-key create ${{ inputs.ssh-key-name }} --public-key "$PUBLIC_KEY" --output json > ssh_key.json
          echo "SSH_KEY_ID=$(jq -r '.[0].id' ssh_key.json)" >> $GITHUB_ENV

      - name: Debug Information
        run: |
          echo environment: ${{ github.event.inputs.environment || 'default' }}
          echo branch or tag: ${{ github.ref_type }}
          echo branch or tag name: ${{ github.ref_name }}
          echo ssh_key_name: ${{ inputs.ssh-key-name }}
          echo SSH_KEY_ID: ${{ env.SSH_KEY_ID }}

      - name: Set environment in GitHub Secrets
        if: env.SSH_KEY_EXISTS == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Display SSH KEY ID: ${{ env.SSH_KEY_ID }}"
          echo -n "${{ env.PRIVATE_KEY }}" | gh secret set SSH_PRIVATE_KEY --repo ${{ github.repository }}
          echo -n "${{ env.SSH_KEY_ID }}" | gh secret set SSH_KEY_ID --repo ${{ github.repository }}

