name: doctl - Backend CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment selection"
        required: true
        type: environment
        default: "dev"
      working-directory:
        description: "Working Directory"
        required: true
        type: string
        default: './backend'
      jar-filename:
        description: "Working Directory"
        required: true
        type: string
        default: 'shavika-websocket-standalone-1.0.0.jar'

permissions:
  contents: write

jobs:
  provision:
    name: Provision and Deployment
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'default' }}
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      packages: read

    steps:
      - name: Check out code
        id: vars
        run: |
          echo "working-directory=${{ inputs.working-directory || './backend' }}" >> $GITHUB_OUTPUT
          echo "jar-filename=${{ inputs.jar-filename || 'shavika-websocket-standalone-1.0.0.jar' }}" >> $GITHUB_OUTPUT

      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      
      - name: Install OpenJDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'
          cache: maven

      - name: Debug Information
        run: |
          echo environment: ${{ github.event.inputs.environment || 'default' }}
          echo github actor: ${{ github.actor }}
          echo github actor id: ${{ github.actor_id }}
          echo branch or tag: ${{ github.ref_type }}
          echo branch or tag name: ${{ github.ref_name }}
          echo git_hash: $(git rev-parse --short "$GITHUB_SHA")
          echo git_branch: ${GITHUB_REF#refs/heads/}
          echo github.event.pull_request.merged: ${{ github.event.pull_request.merged }}
          echo HOST: ${{ vars.BACKEND_DROPLET_IP }}

      - name: Build and package with maven
        run: |
          cd ${{ step.vars.outputs.working-directory }}
          mvn clean package -Dmaven.test.skip

      - name: Check path details
        run: |
          cd cd ${{ step.vars.outputs.working-directory }}/target
          pwd
          ls -l




